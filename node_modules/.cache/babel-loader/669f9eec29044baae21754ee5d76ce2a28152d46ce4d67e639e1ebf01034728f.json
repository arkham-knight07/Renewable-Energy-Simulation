{"ast":null,"code":"import _objectSpread from \"/Users/shresthaverdhan/Desktop/PROJECT/Renewable-Energy-Simulation/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/shresthaverdhan/Desktop/PROJECT/Renewable-Energy-Simulation/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { Sun, Wind, Zap, Droplets, Download, Volume2, VolumeX, Leaf, Mountain, Plus, Minus } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EnergyComparisonDashboard = () => {\n  _s();\n  const [selectedEnergy, setSelectedEnergy] = useState('solar');\n  const [soundEnabled, setSoundEnabled] = useState(true);\n  const [comparisonMode, setComparisonMode] = useState(false);\n  const [selectedSources, setSelectedSources] = useState(['solar']);\n  const [time, setTime] = useState(0);\n\n  // Interactive parameters for each energy source\n  const [parameters, setParameters] = useState({\n    solar: {\n      rayAngle: 45,\n      panelTilt: 30\n    },\n    wind: {\n      windSpeed: 15,\n      turbineHeight: 80\n    },\n    hydro: {\n      damHeight: 50,\n      waterFlow: 70\n    },\n    nuclear: {\n      reactorTemp: 300,\n      controlRods: 50\n    },\n    geothermal: {\n      depth: 2000,\n      temperature: 150\n    },\n    biomass: {\n      bioWeight: 100,\n      moisture: 20\n    }\n  });\n  const audioContextRef = useRef(null);\n\n  // Animation timer for flowing effects\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTime(prev => prev + 1);\n    }, 100);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Energy sources with base values\n  const energySources = {\n    solar: {\n      name: 'Solar Energy',\n      icon: Sun,\n      color: '#f59e0b',\n      baseEfficiency: 22,\n      baseWatts: 1000,\n      cost: 45,\n      environmental: 95,\n      description: 'Solar panels convert sunlight into electricity'\n    },\n    wind: {\n      name: 'Wind Energy',\n      icon: Wind,\n      color: '#10b981',\n      baseEfficiency: 35,\n      baseWatts: 2000,\n      cost: 42,\n      environmental: 90,\n      description: 'Wind turbines capture wind energy'\n    },\n    hydro: {\n      name: 'Hydro Energy',\n      icon: Droplets,\n      color: '#3b82f6',\n      baseEfficiency: 90,\n      baseWatts: 5000,\n      cost: 38,\n      environmental: 85,\n      description: 'Water flow generates electricity'\n    },\n    nuclear: {\n      name: 'Nuclear Energy',\n      icon: Zap,\n      color: '#8b5cf6',\n      baseEfficiency: 85,\n      baseWatts: 10000,\n      cost: 85,\n      environmental: 75,\n      description: 'Nuclear fission produces energy'\n    },\n    geothermal: {\n      name: 'Geothermal Energy',\n      icon: Mountain,\n      color: '#ef4444',\n      baseEfficiency: 75,\n      baseWatts: 3000,\n      cost: 55,\n      environmental: 88,\n      description: 'Earth\\'s heat generates power'\n    },\n    biomass: {\n      name: 'Biomass Energy',\n      icon: Leaf,\n      color: '#84cc16',\n      baseEfficiency: 25,\n      baseWatts: 800,\n      cost: 35,\n      environmental: 70,\n      description: 'Organic matter produces energy'\n    }\n  };\n\n  // Calculate efficiency and watts based on parameters\n  const calculateEfficiency = source => {\n    const base = energySources[source].baseEfficiency;\n    const params = parameters[source];\n    switch (source) {\n      case 'solar':\n        const angleEfficiency = Math.max(0, 100 - Math.abs(params.rayAngle - 40) * 2);\n        const tiltEfficiency = Math.max(0, 100 - Math.abs(params.panelTilt - 35) * 1.5);\n        return Math.round(base * (angleEfficiency * tiltEfficiency) / 10000);\n      case 'wind':\n        let windEff = params.windSpeed < 5 ? 0 : params.windSpeed < 12 ? params.windSpeed * 5 : params.windSpeed < 25 ? 80 + (params.windSpeed - 12) * 1.5 : Math.max(0, 100 - (params.windSpeed - 25) * 3);\n        const heightBonus = Math.min(20, params.turbineHeight / 5);\n        return Math.round(base * (windEff + heightBonus) / 100);\n      case 'hydro':\n        const heightEff = Math.min(100, params.damHeight * 1.5);\n        const flowEff = Math.min(100, params.waterFlow * 1.2);\n        return Math.round(base * (heightEff * flowEff) / 10000);\n      case 'nuclear':\n        const tempEff = Math.min(100, params.reactorTemp / 3);\n        const rodEff = 100 - Math.abs(params.controlRods - 50);\n        return Math.round(base * (tempEff * rodEff) / 10000);\n      case 'geothermal':\n        const depthEff = Math.min(100, params.depth / 25);\n        const heatEff = Math.min(100, params.temperature / 2);\n        return Math.round(base * (depthEff * heatEff) / 10000);\n      case 'biomass':\n        const weightEff = Math.min(100, params.bioWeight / 1.5);\n        const moistureEff = Math.max(0, 100 - params.moisture * 2);\n        return Math.round(base * (weightEff * moistureEff) / 10000);\n      default:\n        return base;\n    }\n  };\n  const calculateWatts = source => {\n    const efficiency = calculateEfficiency(source);\n    const baseWatts = energySources[source].baseWatts;\n    return Math.round(baseWatts * (efficiency / 100));\n  };\n\n  // Sound function\n  const playSound = frequency => {\n    if (!soundEnabled) return;\n    try {\n      if (!audioContextRef.current) {\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      }\n      const oscillator = audioContextRef.current.createOscillator();\n      const gainNode = audioContextRef.current.createGain();\n      oscillator.connect(gainNode);\n      gainNode.connect(audioContextRef.current.destination);\n      oscillator.frequency.setValueAtTime(frequency, audioContextRef.current.currentTime);\n      gainNode.gain.setValueAtTime(0.1, audioContextRef.current.currentTime);\n      gainNode.gain.exponentialRampToValueAtTime(0.01, audioContextRef.current.currentTime + 0.2);\n      oscillator.start();\n      oscillator.stop(audioContextRef.current.currentTime + 0.2);\n    } catch (error) {\n      console.log('Audio not available');\n    }\n  };\n\n  // Update parameter\n  const updateParameter = (source, param, value) => {\n    setParameters(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      [source]: _objectSpread(_objectSpread({}, prev[source]), {}, {\n        [param]: Math.round(value)\n      })\n    }));\n    if (soundEnabled) {\n      playSound(400 + value * 2);\n    }\n  };\n\n  // Working Energy Models with Flowing Effects\n  const SolarPanel = _ref => {\n    let {\n      rayAngle,\n      panelTilt\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"200\",\n      height: \"150\",\n      className: \"mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n        x: \"20\",\n        y: \"70\",\n        width: \"160\",\n        height: \"60\",\n        fill: \"#1f2937\",\n        stroke: \"#374151\",\n        strokeWidth: \"2\",\n        rx: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n        x: \"30\",\n        y: \"80\",\n        width: \"140\",\n        height: \"40\",\n        fill: \"#3b82f6\",\n        opacity: \"0.8\",\n        transform: \"rotate(\".concat(panelTilt - 30, \" 100 100)\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }, this), Array.from({\n        length: 8\n      }, (_, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"170\",\n        y1: \"20\",\n        x2: 100 + Math.cos((rayAngle + i * 15) * Math.PI / 180) * 40,\n        y2: 50 + Math.sin((rayAngle + i * 15) * Math.PI / 180) * 40,\n        stroke: \"#fbbf24\",\n        strokeWidth: \"2\",\n        opacity: 0.6 + Math.sin(time * 0.2 + i) * 0.3\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"170\",\n        cy: \"20\",\n        r: \"12\",\n        fill: \"#fbbf24\",\n        opacity: 0.8 + Math.sin(time * 0.3) * 0.2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"10\",\n        y: \"145\",\n        fontSize: \"10\",\n        fill: \"#666\",\n        children: [\"Angle: \", rayAngle, \"\\xB0 | Tilt: \", panelTilt, \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }, this);\n  };\n  const WindTurbine = _ref2 => {\n    let {\n      windSpeed,\n      turbineHeight\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"200\",\n      height: \"150\",\n      className: \"mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n        x: \"95\",\n        y: 150 - turbineHeight,\n        width: \"10\",\n        height: turbineHeight,\n        fill: \"#374151\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"100\",\n        cy: 150 - turbineHeight,\n        r: \"5\",\n        fill: \"#6b7280\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }, this), Array.from({\n        length: 3\n      }, (_, i) => /*#__PURE__*/_jsxDEV(\"ellipse\", {\n        cx: \"100\",\n        cy: 130 - turbineHeight,\n        rx: \"3\",\n        ry: 15 + windSpeed / 2,\n        fill: \"#e5e7eb\",\n        transform: \"rotate(\".concat(time * windSpeed / 5 + i * 120, \" 100 \").concat(150 - turbineHeight, \")\")\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)), Array.from({\n        length: Math.floor(windSpeed / 3)\n      }, (_, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: 10 + (time * 2 + i * 10) % 60,\n        y1: 60 + i * 8,\n        x2: 50 + (time * 2 + i * 10) % 60,\n        y2: 60 + i * 8,\n        stroke: \"#60a5fa\",\n        strokeWidth: \"2\",\n        opacity: \"0.7\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"10\",\n        y: \"145\",\n        fontSize: \"10\",\n        fill: \"#666\",\n        children: [\"Speed: \", windSpeed, \"mph | Height: \", turbineHeight, \"m\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }, this);\n  };\n  const HydroPlant = _ref3 => {\n    let {\n      damHeight,\n      waterFlow\n    } = _ref3;\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"200\",\n      height: \"150\",\n      className: \"mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n        x: \"140\",\n        y: 150 - damHeight,\n        width: \"50\",\n        height: damHeight,\n        fill: \"#374151\",\n        rx: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n        x: \"50\",\n        y: 130 - damHeight,\n        width: \"100\",\n        height: \"20\",\n        fill: \"#3b82f6\",\n        rx: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M50 \".concat(150 - damHeight, \" L50 140 L140 140 L140 \").concat(150 - damHeight + 20),\n        fill: \"#60a5fa\",\n        opacity: waterFlow / 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 7\n      }, this), Array.from({\n        length: Math.floor(waterFlow / 15)\n      }, (_, i) => /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"120\",\n        cy: 140 - damHeight + 20 + (time * 2 + i * 8) % 30,\n        r: \"2\",\n        fill: \"#3b82f6\",\n        opacity: \"0.8\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)), Array.from({\n        length: Math.floor(waterFlow / 25)\n      }, (_, i) => /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: 110 + Math.sin(time * 0.1 + i) * 5,\n        cy: 120 + (time + i * 10) % 20,\n        r: \"1\",\n        fill: \"#60a5fa\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"10\",\n        y: \"145\",\n        fontSize: \"10\",\n        fill: \"#666\",\n        children: [\"Height: \", damHeight, \"m | Flow: \", waterFlow, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 5\n    }, this);\n  };\n  const NuclearPlant = _ref4 => {\n    let {\n      reactorTemp,\n      controlRods\n    } = _ref4;\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"200\",\n      height: \"150\",\n      className: \"mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n        x: \"60\",\n        y: \"80\",\n        width: \"80\",\n        height: \"50\",\n        fill: \"#374151\",\n        rx: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"100\",\n        cy: \"105\",\n        r: \"20\",\n        fill: \"#8b5cf6\",\n        opacity: reactorTemp / 400\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"100\",\n        cy: \"105\",\n        r: \"15\",\n        fill: \"#a855f7\",\n        opacity: reactorTemp / 500\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 7\n      }, this), Array.from({\n        length: 4\n      }, (_, i) => /*#__PURE__*/_jsxDEV(\"rect\", {\n        x: 85 + i * 8,\n        y: 85 + (100 - controlRods) / 5,\n        width: \"3\",\n        height: 15 + controlRods / 5,\n        fill: \"#374151\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)), Array.from({\n        length: 6\n      }, (_, i) => /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: 90 + Math.sin(time * 0.1 + i) * 10,\n        cy: 60 - (time + i * 5) % 20,\n        r: \"2\",\n        fill: \"#e5e7eb\",\n        opacity: \"0.6\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"10\",\n        y: \"145\",\n        fontSize: \"10\",\n        fill: \"#666\",\n        children: [\"Temp: \", reactorTemp, \"\\xB0C | Rods: \", controlRods, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 5\n    }, this);\n  };\n  const GeothermalPlant = _ref5 => {\n    let {\n      depth,\n      temperature\n    } = _ref5;\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"200\",\n      height: \"150\",\n      className: \"mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n        x: \"80\",\n        y: \"60\",\n        width: \"40\",\n        height: \"40\",\n        fill: \"#374151\",\n        rx: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"100\",\n        cy: \"80\",\n        r: \"8\",\n        fill: \"#ef4444\",\n        opacity: temperature / 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n        x: \"95\",\n        y: \"100\",\n        width: \"10\",\n        height: depth / 40,\n        fill: \"#92400e\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 7\n      }, this), Array.from({\n        length: Math.floor(temperature / 30)\n      }, (_, i) => /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M \".concat(90 + i * 5, \" \").concat(50 - (time + i * 10) % 30, \" Q \").concat(95 + i * 5, \" \").concat(45 - (time + i * 10) % 30, \" \").concat(100 + i * 5, \" \").concat(50 - (time + i * 10) % 30),\n        stroke: \"#fca5a5\",\n        strokeWidth: \"2\",\n        fill: \"none\",\n        opacity: \"0.7\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"10\",\n        y: \"145\",\n        fontSize: \"10\",\n        fill: \"#666\",\n        children: [\"Depth: \", depth, \"m | Temp: \", temperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 5\n    }, this);\n  };\n  const BiomassPlant = _ref6 => {\n    let {\n      bioWeight,\n      moisture\n    } = _ref6;\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"200\",\n      height: \"150\",\n      className: \"mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n        x: \"70\",\n        y: \"70\",\n        width: \"60\",\n        height: \"50\",\n        fill: \"#374151\",\n        rx: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n        x: \"130\",\n        y: \"40\",\n        width: \"10\",\n        height: \"50\",\n        fill: \"#6b7280\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n        cx: \"50\",\n        cy: \"110\",\n        rx: bioWeight / 5,\n        ry: \"15\",\n        fill: \"#84cc16\",\n        opacity: 0.8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n        x: \"20\",\n        y: \"90\",\n        width: moisture,\n        height: \"5\",\n        fill: \"#3b82f6\",\n        opacity: \"0.6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 7\n      }, this), Array.from({\n        length: Math.floor((100 - moisture) / 15)\n      }, (_, i) => /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: 130 + Math.sin(time * 0.1 + i) * 6,\n        cy: 35 - (time + i * 8) % 25,\n        r: \"3\",\n        fill: \"#a3e635\",\n        opacity: \"0.6\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"10\",\n        y: \"145\",\n        fontSize: \"10\",\n        fill: \"#666\",\n        children: [\"Weight: \", bioWeight, \"kg | Moisture: \", moisture, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 5\n    }, this);\n  };\n  const renderEnergyModel = type => {\n    const params = parameters[type];\n    switch (type) {\n      case 'solar':\n        return /*#__PURE__*/_jsxDEV(SolarPanel, {\n          rayAngle: params.rayAngle,\n          panelTilt: params.panelTilt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 28\n        }, this);\n      case 'wind':\n        return /*#__PURE__*/_jsxDEV(WindTurbine, {\n          windSpeed: params.windSpeed,\n          turbineHeight: params.turbineHeight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 27\n        }, this);\n      case 'hydro':\n        return /*#__PURE__*/_jsxDEV(HydroPlant, {\n          damHeight: params.damHeight,\n          waterFlow: params.waterFlow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 28\n        }, this);\n      case 'nuclear':\n        return /*#__PURE__*/_jsxDEV(NuclearPlant, {\n          reactorTemp: params.reactorTemp,\n          controlRods: params.controlRods\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 30\n        }, this);\n      case 'geothermal':\n        return /*#__PURE__*/_jsxDEV(GeothermalPlant, {\n          depth: params.depth,\n          temperature: params.temperature\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 33\n        }, this);\n      case 'biomass':\n        return /*#__PURE__*/_jsxDEV(BiomassPlant, {\n          bioWeight: params.bioWeight,\n          moisture: params.moisture\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 30\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(SolarPanel, {\n          rayAngle: 45,\n          panelTilt: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 23\n        }, this);\n    }\n  };\n  const renderControls = source => {\n    const params = parameters[source];\n    const ControlButton = _ref7 => {\n      let {\n        label,\n        param,\n        value,\n        min,\n        max,\n        step = 1,\n        unit = ''\n      } = _ref7;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm w-24 font-medium\",\n          children: [label, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const newValue = Math.max(min, value - step);\n            updateParameter(source, param, newValue);\n          },\n          className: \"p-1 bg-red-500 text-white rounded hover:bg-red-600 transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(Minus, {\n            className: \"w-3 h-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-16 text-center text-sm font-bold bg-gray-100 py-1 px-2 rounded\",\n          children: [value, unit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const newValue = Math.min(max, value + step);\n            updateParameter(source, param, newValue);\n          },\n          className: \"p-1 bg-green-500 text-white rounded hover:bg-green-600 transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(Plus, {\n            className: \"w-3 h-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 7\n      }, this);\n    };\n    switch (source) {\n      case 'solar':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ControlButton, {\n            label: \"Ray Angle\",\n            param: \"rayAngle\",\n            value: params.rayAngle,\n            min: 0,\n            max: 90,\n            unit: \"\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n            label: \"Panel Tilt\",\n            param: \"panelTilt\",\n            value: params.panelTilt,\n            min: 0,\n            max: 60,\n            unit: \"\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this);\n      case 'wind':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ControlButton, {\n            label: \"Wind Speed\",\n            param: \"windSpeed\",\n            value: params.windSpeed,\n            min: 0,\n            max: 50,\n            unit: \"mph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n            label: \"Height\",\n            param: \"turbineHeight\",\n            value: params.turbineHeight,\n            min: 20,\n            max: 120,\n            step: 5,\n            unit: \"m\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this);\n      case 'hydro':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ControlButton, {\n            label: \"Dam Height\",\n            param: \"damHeight\",\n            value: params.damHeight,\n            min: 10,\n            max: 100,\n            unit: \"m\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n            label: \"Water Flow\",\n            param: \"waterFlow\",\n            value: params.waterFlow,\n            min: 0,\n            max: 100,\n            unit: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this);\n      case 'nuclear':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ControlButton, {\n            label: \"Reactor Temp\",\n            param: \"reactorTemp\",\n            value: params.reactorTemp,\n            min: 100,\n            max: 500,\n            step: 10,\n            unit: \"\\xB0C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n            label: \"Control Rods\",\n            param: \"controlRods\",\n            value: params.controlRods,\n            min: 0,\n            max: 100,\n            step: 5,\n            unit: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this);\n      case 'geothermal':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ControlButton, {\n            label: \"Drill Depth\",\n            param: \"depth\",\n            value: params.depth,\n            min: 500,\n            max: 5000,\n            step: 100,\n            unit: \"m\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n            label: \"Temperature\",\n            param: \"temperature\",\n            value: params.temperature,\n            min: 50,\n            max: 300,\n            step: 10,\n            unit: \"\\xB0C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this);\n      case 'biomass':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ControlButton, {\n            label: \"Bio Weight\",\n            param: \"bioWeight\",\n            value: params.bioWeight,\n            min: 10,\n            max: 200,\n            step: 5,\n            unit: \"kg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n            label: \"Moisture\",\n            param: \"moisture\",\n            value: params.moisture,\n            min: 0,\n            max: 50,\n            unit: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n\n  // Export data\n  const exportData = format => {\n    const data = (comparisonMode ? selectedSources : [selectedEnergy]).map(source => ({\n      name: energySources[source].name,\n      efficiency: calculateEfficiency(source),\n      watts: calculateWatts(source),\n      cost: energySources[source].cost,\n      environmental: energySources[source].environmental,\n      parameters: parameters[source]\n    }));\n    const blob = format === 'json' ? new Blob([JSON.stringify(data, null, 2)], {\n      type: 'application/json'\n    }) : new Blob(['Name,Efficiency,Watts,Cost,Environmental,Parameters\\n' + data.map(row => \"\".concat(row.name, \",\").concat(row.efficiency, \",\").concat(row.watts, \",\").concat(row.cost, \",\").concat(row.environmental, \",\\\"\").concat(JSON.stringify(row.parameters), \"\\\"\")).join('\\n')], {\n      type: 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = \"energy-data.\".concat(format);\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n    playSound(800);\n  };\n  const toggleSource = source => {\n    if (comparisonMode) {\n      setSelectedSources(prev => prev.includes(source) ? prev.length > 1 ? prev.filter(s => s !== source) : prev : [...prev, source]);\n    } else {\n      setSelectedEnergy(source);\n    }\n    playSound(600);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-blue-50 to-green-50 p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold text-center text-gray-800 mb-8\",\n        children: \"Interactive Energy Sources Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap items-center justify-center gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: comparisonMode,\n              onChange: e => setComparisonMode(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: \"Compare Multiple Sources\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSoundEnabled(!soundEnabled),\n            className: \"p-2 rounded transition-colors \".concat(soundEnabled ? 'bg-green-500 text-white' : 'bg-gray-300'),\n            children: soundEnabled ? /*#__PURE__*/_jsxDEV(Volume2, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 31\n            }, this) : /*#__PURE__*/_jsxDEV(VolumeX, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 65\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6 mb-8\",\n        children: Object.entries(energySources).map(_ref8 => {\n          let [key, source] = _ref8;\n          const Icon = source.icon;\n          const isSelected = comparisonMode ? selectedSources.includes(key) : selectedEnergy === key;\n          const efficiency = calculateEfficiency(key);\n          const watts = calculateWatts(key);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-6 rounded-lg shadow-lg transition-all \".concat(isSelected ? 'ring-4 ring-blue-500 shadow-xl' : 'hover:shadow-xl'),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-3 mb-4 cursor-pointer\",\n              onClick: () => toggleSource(key),\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                className: \"w-6 h-6\",\n                style: {\n                  color: source.color\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-bold\",\n                children: source.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 19\n              }, this), isSelected && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-3 h-3 bg-blue-500 rounded-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: renderEnergyModel(key)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4 p-4 bg-gray-50 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-semibold mb-3 text-sm text-gray-700\",\n                children: \"Adjust Parameters:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 19\n              }, this), renderControls(key)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-blue-50 p-3 rounded-lg\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-2xl font-bold\",\n                    style: {\n                      color: source.color\n                    },\n                    children: [watts.toLocaleString(), \" W\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 551,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-gray-600\",\n                    children: \"Power Output\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-2 gap-2 text-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Efficiency:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 560,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-bold\",\n                    style: {\n                      color: source.color\n                    },\n                    children: [efficiency, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 561,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Cost Score:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 566,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-bold\",\n                    style: {\n                      color: source.color\n                    },\n                    children: [100 - source.cost, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 567,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Environmental:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 572,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-bold\",\n                    style: {\n                      color: source.color\n                    },\n                    children: [source.environmental, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"kWh/day:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 578,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-bold\",\n                    style: {\n                      color: source.color\n                    },\n                    children: Math.round(watts * 24 / 1000)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 579,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this), comparisonMode && selectedSources.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-lg mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Current Performance Comparison\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: selectedSources.map(source => ({\n              name: energySources[source].name,\n              efficiency: calculateEfficiency(source),\n              watts: calculateWatts(source) / 100,\n              // Scale for chart\n              environmental: energySources[source].environmental\n            })),\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              formatter: (value, name) => [name === 'watts' ? \"\".concat(Math.round(value * 100), \" W\") : \"\".concat(value, \"%\"), name === 'watts' ? 'Power Output' : name.charAt(0).toUpperCase() + name.slice(1)]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"efficiency\",\n              fill: \"#3b82f6\",\n              name: \"Efficiency %\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"watts\",\n              fill: \"#10b981\",\n              name: \"Power Output (x100 W)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"environmental\",\n              fill: \"#f59e0b\",\n              name: \"Environmental Score %\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Energy Production Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\",\n          children: (comparisonMode ? selectedSources : [selectedEnergy]).map(source => {\n            const watts = calculateWatts(source);\n            const efficiency = calculateEfficiency(source);\n            const dailyKwh = Math.round(watts * 24 / 1000);\n            const sourceData = energySources[source];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center p-4 bg-gray-50 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-2xl font-bold mb-1\",\n                style: {\n                  color: sourceData.color\n                },\n                children: [watts.toLocaleString(), \" W\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg font-semibold mb-1\",\n                style: {\n                  color: sourceData.color\n                },\n                children: [efficiency, \"% efficient\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600 mb-2\",\n                children: sourceData.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-500\",\n                children: [dailyKwh, \" kWh/day\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 19\n              }, this)]\n            }, source, true, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 483,\n    columnNumber: 5\n  }, this);\n};\n_s(EnergyComparisonDashboard, \"UEpb4iyZOKHXAM6T2BmbKON0bQs=\");\n_c = EnergyComparisonDashboard;\nexport default EnergyComparisonDashboard;\nvar _c;\n$RefreshReg$(_c, \"EnergyComparisonDashboard\");","map":{"version":3,"names":["React","useState","useRef","useEffect","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Sun","Wind","Zap","Droplets","Download","Volume2","VolumeX","Leaf","Mountain","Plus","Minus","jsxDEV","_jsxDEV","EnergyComparisonDashboard","_s","selectedEnergy","setSelectedEnergy","soundEnabled","setSoundEnabled","comparisonMode","setComparisonMode","selectedSources","setSelectedSources","time","setTime","parameters","setParameters","solar","rayAngle","panelTilt","wind","windSpeed","turbineHeight","hydro","damHeight","waterFlow","nuclear","reactorTemp","controlRods","geothermal","depth","temperature","biomass","bioWeight","moisture","audioContextRef","interval","setInterval","prev","clearInterval","energySources","name","icon","color","baseEfficiency","baseWatts","cost","environmental","description","calculateEfficiency","source","base","params","angleEfficiency","Math","max","abs","tiltEfficiency","round","windEff","heightBonus","min","heightEff","flowEff","tempEff","rodEff","depthEff","heatEff","weightEff","moistureEff","calculateWatts","efficiency","playSound","frequency","current","window","AudioContext","webkitAudioContext","oscillator","createOscillator","gainNode","createGain","connect","destination","setValueAtTime","currentTime","gain","exponentialRampToValueAtTime","start","stop","error","console","log","updateParameter","param","value","_objectSpread","SolarPanel","_ref","width","height","className","children","x","y","fill","stroke","strokeWidth","rx","fileName","_jsxFileName","lineNumber","columnNumber","opacity","transform","concat","Array","from","length","_","i","x1","y1","x2","cos","PI","y2","sin","cx","cy","r","fontSize","WindTurbine","_ref2","ry","floor","HydroPlant","_ref3","d","NuclearPlant","_ref4","GeothermalPlant","_ref5","BiomassPlant","_ref6","renderEnergyModel","type","renderControls","ControlButton","_ref7","label","step","unit","onClick","newValue","exportData","format","data","map","watts","blob","Blob","JSON","stringify","row","join","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","toggleSource","includes","filter","s","checked","onChange","e","target","Object","entries","_ref8","key","Icon","isSelected","style","toLocaleString","strokeDasharray","dataKey","formatter","charAt","toUpperCase","slice","dailyKwh","sourceData","_c","$RefreshReg$"],"sources":["/Users/shresthaverdhan/Desktop/PROJECT/Renewable-Energy-Simulation/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { Sun, Wind, Zap, Droplets, Download, Volume2, VolumeX, Leaf, Mountain, Plus, Minus } from 'lucide-react';\n\nconst EnergyComparisonDashboard = () => {\n  const [selectedEnergy, setSelectedEnergy] = useState('solar');\n  const [soundEnabled, setSoundEnabled] = useState(true);\n  const [comparisonMode, setComparisonMode] = useState(false);\n  const [selectedSources, setSelectedSources] = useState(['solar']);\n  const [time, setTime] = useState(0);\n  \n  // Interactive parameters for each energy source\n  const [parameters, setParameters] = useState({\n    solar: { rayAngle: 45, panelTilt: 30 },\n    wind: { windSpeed: 15, turbineHeight: 80 },\n    hydro: { damHeight: 50, waterFlow: 70 },\n    nuclear: { reactorTemp: 300, controlRods: 50 },\n    geothermal: { depth: 2000, temperature: 150 },\n    biomass: { bioWeight: 100, moisture: 20 }\n  });\n  \n  const audioContextRef = useRef(null);\n\n  // Animation timer for flowing effects\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTime(prev => prev + 1);\n    }, 100);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Energy sources with base values\n  const energySources = {\n    solar: {\n      name: 'Solar Energy',\n      icon: Sun,\n      color: '#f59e0b',\n      baseEfficiency: 22,\n      baseWatts: 1000,\n      cost: 45,\n      environmental: 95,\n      description: 'Solar panels convert sunlight into electricity'\n    },\n    wind: {\n      name: 'Wind Energy',\n      icon: Wind,\n      color: '#10b981',\n      baseEfficiency: 35,\n      baseWatts: 2000,\n      cost: 42,\n      environmental: 90,\n      description: 'Wind turbines capture wind energy'\n    },\n    hydro: {\n      name: 'Hydro Energy',\n      icon: Droplets,\n      color: '#3b82f6',\n      baseEfficiency: 90,\n      baseWatts: 5000,\n      cost: 38,\n      environmental: 85,\n      description: 'Water flow generates electricity'\n    },\n    nuclear: {\n      name: 'Nuclear Energy',\n      icon: Zap,\n      color: '#8b5cf6',\n      baseEfficiency: 85,\n      baseWatts: 10000,\n      cost: 85,\n      environmental: 75,\n      description: 'Nuclear fission produces energy'\n    },\n    geothermal: {\n      name: 'Geothermal Energy',\n      icon: Mountain,\n      color: '#ef4444',\n      baseEfficiency: 75,\n      baseWatts: 3000,\n      cost: 55,\n      environmental: 88,\n      description: 'Earth\\'s heat generates power'\n    },\n    biomass: {\n      name: 'Biomass Energy',\n      icon: Leaf,\n      color: '#84cc16',\n      baseEfficiency: 25,\n      baseWatts: 800,\n      cost: 35,\n      environmental: 70,\n      description: 'Organic matter produces energy'\n    }\n  };\n\n  // Calculate efficiency and watts based on parameters\n  const calculateEfficiency = (source) => {\n    const base = energySources[source].baseEfficiency;\n    const params = parameters[source];\n    \n    switch (source) {\n      case 'solar':\n        const angleEfficiency = Math.max(0, 100 - Math.abs(params.rayAngle - 40) * 2);\n        const tiltEfficiency = Math.max(0, 100 - Math.abs(params.panelTilt - 35) * 1.5);\n        return Math.round(base * (angleEfficiency * tiltEfficiency) / 10000);\n      \n      case 'wind':\n        let windEff = params.windSpeed < 5 ? 0 : \n                     params.windSpeed < 12 ? params.windSpeed * 5 :\n                     params.windSpeed < 25 ? 80 + (params.windSpeed - 12) * 1.5 :\n                     Math.max(0, 100 - (params.windSpeed - 25) * 3);\n        const heightBonus = Math.min(20, params.turbineHeight / 5);\n        return Math.round(base * (windEff + heightBonus) / 100);\n      \n      case 'hydro':\n        const heightEff = Math.min(100, params.damHeight * 1.5);\n        const flowEff = Math.min(100, params.waterFlow * 1.2);\n        return Math.round(base * (heightEff * flowEff) / 10000);\n      \n      case 'nuclear':\n        const tempEff = Math.min(100, params.reactorTemp / 3);\n        const rodEff = 100 - Math.abs(params.controlRods - 50);\n        return Math.round(base * (tempEff * rodEff) / 10000);\n      \n      case 'geothermal':\n        const depthEff = Math.min(100, params.depth / 25);\n        const heatEff = Math.min(100, params.temperature / 2);\n        return Math.round(base * (depthEff * heatEff) / 10000);\n      \n      case 'biomass':\n        const weightEff = Math.min(100, params.bioWeight / 1.5);\n        const moistureEff = Math.max(0, 100 - params.moisture * 2);\n        return Math.round(base * (weightEff * moistureEff) / 10000);\n      \n      default:\n        return base;\n    }\n  };\n\n  const calculateWatts = (source) => {\n    const efficiency = calculateEfficiency(source);\n    const baseWatts = energySources[source].baseWatts;\n    return Math.round(baseWatts * (efficiency / 100));\n  };\n\n  // Sound function\n  const playSound = (frequency) => {\n    if (!soundEnabled) return;\n    try {\n      if (!audioContextRef.current) {\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      }\n      const oscillator = audioContextRef.current.createOscillator();\n      const gainNode = audioContextRef.current.createGain();\n      oscillator.connect(gainNode);\n      gainNode.connect(audioContextRef.current.destination);\n      oscillator.frequency.setValueAtTime(frequency, audioContextRef.current.currentTime);\n      gainNode.gain.setValueAtTime(0.1, audioContextRef.current.currentTime);\n      gainNode.gain.exponentialRampToValueAtTime(0.01, audioContextRef.current.currentTime + 0.2);\n      oscillator.start();\n      oscillator.stop(audioContextRef.current.currentTime + 0.2);\n    } catch (error) {\n      console.log('Audio not available');\n    }\n  };\n\n  // Update parameter\n  const updateParameter = (source, param, value) => {\n    setParameters(prev => ({\n      ...prev,\n      [source]: {\n        ...prev[source],\n        [param]: Math.round(value)\n      }\n    }));\n    if (soundEnabled) {\n      playSound(400 + value * 2);\n    }\n  };\n\n  // Working Energy Models with Flowing Effects\n  const SolarPanel = ({ rayAngle, panelTilt }) => (\n    <svg width=\"200\" height=\"150\" className=\"mx-auto\">\n      <rect x=\"20\" y=\"70\" width=\"160\" height=\"60\" fill=\"#1f2937\" stroke=\"#374151\" strokeWidth=\"2\" rx=\"5\"/>\n      <rect \n        x=\"30\" y=\"80\" width=\"140\" height=\"40\" fill=\"#3b82f6\" opacity=\"0.8\"\n        transform={`rotate(${panelTilt - 30} 100 100)`}\n      />\n      {/* Flowing sun rays */}\n      {Array.from({ length: 8 }, (_, i) => (\n        <line\n          key={i}\n          x1=\"170\"\n          y1=\"20\"\n          x2={100 + Math.cos((rayAngle + i * 15) * Math.PI / 180) * 40}\n          y2={50 + Math.sin((rayAngle + i * 15) * Math.PI / 180) * 40}\n          stroke=\"#fbbf24\"\n          strokeWidth=\"2\"\n          opacity={0.6 + Math.sin(time * 0.2 + i) * 0.3}\n        />\n      ))}\n      <circle cx=\"170\" cy=\"20\" r=\"12\" fill=\"#fbbf24\" opacity={0.8 + Math.sin(time * 0.3) * 0.2}/>\n      <text x=\"10\" y=\"145\" fontSize=\"10\" fill=\"#666\">Angle: {rayAngle}° | Tilt: {panelTilt}°</text>\n    </svg>\n  );\n\n  const WindTurbine = ({ windSpeed, turbineHeight }) => (\n    <svg width=\"200\" height=\"150\" className=\"mx-auto\">\n      <rect x=\"95\" y={150 - turbineHeight} width=\"10\" height={turbineHeight} fill=\"#374151\"/>\n      <circle cx=\"100\" cy={150 - turbineHeight} r=\"5\" fill=\"#6b7280\"/>\n      {/* Rotating turbine blades */}\n      {Array.from({ length: 3 }, (_, i) => (\n        <ellipse\n          key={i}\n          cx=\"100\"\n          cy={130 - turbineHeight}\n          rx=\"3\"\n          ry={15 + windSpeed / 2}\n          fill=\"#e5e7eb\"\n          transform={`rotate(${time * windSpeed / 5 + i * 120} 100 ${150 - turbineHeight})`}\n        />\n      ))}\n      {/* Flowing wind lines */}\n      {Array.from({ length: Math.floor(windSpeed / 3) }, (_, i) => (\n        <line\n          key={i}\n          x1={10 + (time * 2 + i * 10) % 60}\n          y1={60 + i * 8}\n          x2={50 + (time * 2 + i * 10) % 60}\n          y2={60 + i * 8}\n          stroke=\"#60a5fa\"\n          strokeWidth=\"2\"\n          opacity=\"0.7\"\n        />\n      ))}\n      <text x=\"10\" y=\"145\" fontSize=\"10\" fill=\"#666\">Speed: {windSpeed}mph | Height: {turbineHeight}m</text>\n    </svg>\n  );\n\n  const HydroPlant = ({ damHeight, waterFlow }) => (\n    <svg width=\"200\" height=\"150\" className=\"mx-auto\">\n      <rect x=\"140\" y={150 - damHeight} width=\"50\" height={damHeight} fill=\"#374151\" rx=\"5\"/>\n      <rect x=\"50\" y={130 - damHeight} width=\"100\" height=\"20\" fill=\"#3b82f6\" rx=\"10\"/>\n      <path \n        d={`M50 ${150 - damHeight} L50 140 L140 140 L140 ${150 - damHeight + 20}`} \n        fill=\"#60a5fa\" \n        opacity={waterFlow / 100}\n      />\n      {/* Flowing water */}\n      {Array.from({ length: Math.floor(waterFlow / 15) }, (_, i) => (\n        <circle\n          key={i}\n          cx=\"120\"\n          cy={140 - damHeight + 20 + (time * 2 + i * 8) % 30}\n          r=\"2\"\n          fill=\"#3b82f6\"\n          opacity=\"0.8\"\n        />\n      ))}\n      {/* Water droplets */}\n      {Array.from({ length: Math.floor(waterFlow / 25) }, (_, i) => (\n        <circle\n          key={i}\n          cx={110 + Math.sin(time * 0.1 + i) * 5}\n          cy={120 + (time + i * 10) % 20}\n          r=\"1\"\n          fill=\"#60a5fa\"\n        />\n      ))}\n      <text x=\"10\" y=\"145\" fontSize=\"10\" fill=\"#666\">Height: {damHeight}m | Flow: {waterFlow}%</text>\n    </svg>\n  );\n\n  const NuclearPlant = ({ reactorTemp, controlRods }) => (\n    <svg width=\"200\" height=\"150\" className=\"mx-auto\">\n      <rect x=\"60\" y=\"80\" width=\"80\" height=\"50\" fill=\"#374151\" rx=\"5\"/>\n      <circle cx=\"100\" cy=\"105\" r=\"20\" fill=\"#8b5cf6\" opacity={reactorTemp / 400}/>\n      <circle cx=\"100\" cy=\"105\" r=\"15\" fill=\"#a855f7\" opacity={reactorTemp / 500}/>\n      {/* Control rods */}\n      {Array.from({ length: 4 }, (_, i) => (\n        <rect\n          key={i}\n          x={85 + i * 8}\n          y={85 + (100 - controlRods) / 5}\n          width=\"3\"\n          height={15 + controlRods / 5}\n          fill=\"#374151\"\n        />\n      ))}\n      {/* Steam particles */}\n      {Array.from({ length: 6 }, (_, i) => (\n        <circle\n          key={i}\n          cx={90 + Math.sin(time * 0.1 + i) * 10}\n          cy={60 - (time + i * 5) % 20}\n          r=\"2\"\n          fill=\"#e5e7eb\"\n          opacity=\"0.6\"\n        />\n      ))}\n      <text x=\"10\" y=\"145\" fontSize=\"10\" fill=\"#666\">Temp: {reactorTemp}°C | Rods: {controlRods}%</text>\n    </svg>\n  );\n\n  const GeothermalPlant = ({ depth, temperature }) => (\n    <svg width=\"200\" height=\"150\" className=\"mx-auto\">\n      <rect x=\"80\" y=\"60\" width=\"40\" height=\"40\" fill=\"#374151\" rx=\"5\"/>\n      <circle cx=\"100\" cy=\"80\" r=\"8\" fill=\"#ef4444\" opacity={temperature / 200}/>\n      {/* Underground pipe */}\n      <rect x=\"95\" y=\"100\" width=\"10\" height={depth / 40} fill=\"#92400e\"/>\n      {/* Rising heat waves */}\n      {Array.from({ length: Math.floor(temperature / 30) }, (_, i) => (\n        <path\n          key={i}\n          d={`M ${90 + i * 5} ${50 - (time + i * 10) % 30} Q ${95 + i * 5} ${45 - (time + i * 10) % 30} ${100 + i * 5} ${50 - (time + i * 10) % 30}`}\n          stroke=\"#fca5a5\"\n          strokeWidth=\"2\"\n          fill=\"none\"\n          opacity=\"0.7\"\n        />\n      ))}\n      <text x=\"10\" y=\"145\" fontSize=\"10\" fill=\"#666\">Depth: {depth}m | Temp: {temperature}°C</text>\n    </svg>\n  );\n\n  const BiomassPlant = ({ bioWeight, moisture }) => (\n    <svg width=\"200\" height=\"150\" className=\"mx-auto\">\n      <rect x=\"70\" y=\"70\" width=\"60\" height=\"50\" fill=\"#374151\" rx=\"5\"/>\n      <rect x=\"130\" y=\"40\" width=\"10\" height=\"50\" fill=\"#6b7280\"/>\n      {/* Biomass pile */}\n      <ellipse cx=\"50\" cy=\"110\" rx={bioWeight / 5} ry=\"15\" fill=\"#84cc16\" opacity={0.8}/>\n      {/* Moisture indicator */}\n      <rect x=\"20\" y=\"90\" width={moisture} height=\"5\" fill=\"#3b82f6\" opacity=\"0.6\"/>\n      {/* Rising smoke/steam */}\n      {Array.from({ length: Math.floor((100 - moisture) / 15) }, (_, i) => (\n        <circle\n          key={i}\n          cx={130 + Math.sin(time * 0.1 + i) * 6}\n          cy={35 - (time + i * 8) % 25}\n          r=\"3\"\n          fill=\"#a3e635\"\n          opacity=\"0.6\"\n        />\n      ))}\n      <text x=\"10\" y=\"145\" fontSize=\"10\" fill=\"#666\">Weight: {bioWeight}kg | Moisture: {moisture}%</text>\n    </svg>\n  );\n\n  const renderEnergyModel = (type) => {\n    const params = parameters[type];\n    switch (type) {\n      case 'solar': return <SolarPanel rayAngle={params.rayAngle} panelTilt={params.panelTilt} />;\n      case 'wind': return <WindTurbine windSpeed={params.windSpeed} turbineHeight={params.turbineHeight} />;\n      case 'hydro': return <HydroPlant damHeight={params.damHeight} waterFlow={params.waterFlow} />;\n      case 'nuclear': return <NuclearPlant reactorTemp={params.reactorTemp} controlRods={params.controlRods} />;\n      case 'geothermal': return <GeothermalPlant depth={params.depth} temperature={params.temperature} />;\n      case 'biomass': return <BiomassPlant bioWeight={params.bioWeight} moisture={params.moisture} />;\n      default: return <SolarPanel rayAngle={45} panelTilt={30} />;\n    }\n  };\n\n  const renderControls = (source) => {\n    const params = parameters[source];\n    \n    const ControlButton = ({ label, param, value, min, max, step = 1, unit = '' }) => (\n      <div className=\"flex items-center gap-2 mb-3\">\n        <span className=\"text-sm w-24 font-medium\">{label}:</span>\n        <button\n          onClick={() => {\n            const newValue = Math.max(min, value - step);\n            updateParameter(source, param, newValue);\n          }}\n          className=\"p-1 bg-red-500 text-white rounded hover:bg-red-600 transition-colors\"\n        >\n          <Minus className=\"w-3 h-3\" />\n        </button>\n        <span className=\"w-16 text-center text-sm font-bold bg-gray-100 py-1 px-2 rounded\">\n          {value}{unit}\n        </span>\n        <button\n          onClick={() => {\n            const newValue = Math.min(max, value + step);\n            updateParameter(source, param, newValue);\n          }}\n          className=\"p-1 bg-green-500 text-white rounded hover:bg-green-600 transition-colors\"\n        >\n          <Plus className=\"w-3 h-3\" />\n        </button>\n      </div>\n    );\n\n    switch (source) {\n      case 'solar':\n        return (\n          <div>\n            <ControlButton label=\"Ray Angle\" param=\"rayAngle\" value={params.rayAngle} min={0} max={90} unit=\"°\" />\n            <ControlButton label=\"Panel Tilt\" param=\"panelTilt\" value={params.panelTilt} min={0} max={60} unit=\"°\" />\n          </div>\n        );\n      case 'wind':\n        return (\n          <div>\n            <ControlButton label=\"Wind Speed\" param=\"windSpeed\" value={params.windSpeed} min={0} max={50} unit=\"mph\" />\n            <ControlButton label=\"Height\" param=\"turbineHeight\" value={params.turbineHeight} min={20} max={120} step={5} unit=\"m\" />\n          </div>\n        );\n      case 'hydro':\n        return (\n          <div>\n            <ControlButton label=\"Dam Height\" param=\"damHeight\" value={params.damHeight} min={10} max={100} unit=\"m\" />\n            <ControlButton label=\"Water Flow\" param=\"waterFlow\" value={params.waterFlow} min={0} max={100} unit=\"%\" />\n          </div>\n        );\n      case 'nuclear':\n        return (\n          <div>\n            <ControlButton label=\"Reactor Temp\" param=\"reactorTemp\" value={params.reactorTemp} min={100} max={500} step={10} unit=\"°C\" />\n            <ControlButton label=\"Control Rods\" param=\"controlRods\" value={params.controlRods} min={0} max={100} step={5} unit=\"%\" />\n          </div>\n        );\n      case 'geothermal':\n        return (\n          <div>\n            <ControlButton label=\"Drill Depth\" param=\"depth\" value={params.depth} min={500} max={5000} step={100} unit=\"m\" />\n            <ControlButton label=\"Temperature\" param=\"temperature\" value={params.temperature} min={50} max={300} step={10} unit=\"°C\" />\n          </div>\n        );\n      case 'biomass':\n        return (\n          <div>\n            <ControlButton label=\"Bio Weight\" param=\"bioWeight\" value={params.bioWeight} min={10} max={200} step={5} unit=\"kg\" />\n            <ControlButton label=\"Moisture\" param=\"moisture\" value={params.moisture} min={0} max={50} unit=\"%\" />\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  // Export data\n  const exportData = (format) => {\n    const data = (comparisonMode ? selectedSources : [selectedEnergy]).map(source => ({\n      name: energySources[source].name,\n      efficiency: calculateEfficiency(source),\n      watts: calculateWatts(source),\n      cost: energySources[source].cost,\n      environmental: energySources[source].environmental,\n      parameters: parameters[source]\n    }));\n\n    const blob = format === 'json' ?\n      new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' }) :\n      new Blob([\n        'Name,Efficiency,Watts,Cost,Environmental,Parameters\\n' +\n        data.map(row => `${row.name},${row.efficiency},${row.watts},${row.cost},${row.environmental},\"${JSON.stringify(row.parameters)}\"`).join('\\n')\n      ], { type: 'text/csv' });\n\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `energy-data.${format}`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n    playSound(800);\n  };\n\n  const toggleSource = (source) => {\n    if (comparisonMode) {\n      setSelectedSources(prev => \n        prev.includes(source) \n          ? prev.length > 1 ? prev.filter(s => s !== source) : prev\n          : [...prev, source]\n      );\n    } else {\n      setSelectedEnergy(source);\n    }\n    playSound(600);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-green-50 p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        <h1 className=\"text-4xl font-bold text-center text-gray-800 mb-8\">\n          Interactive Energy Sources Dashboard\n        </h1>\n\n        {/* Simple Controls */}\n        <div className=\"bg-white p-4 rounded-lg shadow mb-6\">\n          <div className=\"flex flex-wrap items-center justify-center gap-4\">\n            <label className=\"flex items-center gap-2\">\n              <input\n                type=\"checkbox\"\n                checked={comparisonMode}\n                onChange={(e) => setComparisonMode(e.target.checked)}\n              />\n              <span className=\"font-medium\">Compare Multiple Sources</span>\n            </label>\n\n            <button\n              onClick={() => setSoundEnabled(!soundEnabled)}\n              className={`p-2 rounded transition-colors ${soundEnabled ? 'bg-green-500 text-white' : 'bg-gray-300'}`}\n            >\n              {soundEnabled ? <Volume2 className=\"w-4 h-4\" /> : <VolumeX className=\"w-4 h-4\" />}\n            </button>\n\n            {/* Removed Export JSON and Export CSV buttons as requested */}\n          </div>\n        </div>\n\n        {/* Energy Source Cards */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6 mb-8\">\n          {Object.entries(energySources).map(([key, source]) => {\n            const Icon = source.icon;\n            const isSelected = comparisonMode ? selectedSources.includes(key) : selectedEnergy === key;\n            const efficiency = calculateEfficiency(key);\n            const watts = calculateWatts(key);\n            \n            return (\n              <div\n                key={key}\n                className={`bg-white p-6 rounded-lg shadow-lg transition-all ${\n                  isSelected ? 'ring-4 ring-blue-500 shadow-xl' : 'hover:shadow-xl'\n                }`}\n              >\n                <div \n                  className=\"flex items-center gap-3 mb-4 cursor-pointer\"\n                  onClick={() => toggleSource(key)}\n                >\n                  <Icon className=\"w-6 h-6\" style={{ color: source.color }} />\n                  <h3 className=\"text-lg font-bold\">{source.name}</h3>\n                  {isSelected && <div className=\"w-3 h-3 bg-blue-500 rounded-full\"></div>}\n                </div>\n                \n                {/* Energy Model */}\n                <div className=\"mb-4\">\n                  {renderEnergyModel(key)}\n                </div>\n                \n                {/* Interactive Controls */}\n                <div className=\"mb-4 p-4 bg-gray-50 rounded-lg\">\n                  <h4 className=\"font-semibold mb-3 text-sm text-gray-700\">Adjust Parameters:</h4>\n                  {renderControls(key)}\n                </div>\n                \n                {/* Current Output */}\n                <div className=\"space-y-3\">\n                  <div className=\"bg-blue-50 p-3 rounded-lg\">\n                    <div className=\"text-center\">\n                      <div className=\"text-2xl font-bold\" style={{ color: source.color }}>\n                        {watts.toLocaleString()} W\n                      </div>\n                      <div className=\"text-sm text-gray-600\">Power Output</div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span>Efficiency:</span>\n                      <span className=\"font-bold\" style={{ color: source.color }}>\n                        {efficiency}%\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Cost Score:</span>\n                      <span className=\"font-bold\" style={{ color: source.color }}>\n                        {100 - source.cost}%\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Environmental:</span>\n                      <span className=\"font-bold\" style={{ color: source.color }}>\n                        {source.environmental}%\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>kWh/day:</span>\n                      <span className=\"font-bold\" style={{ color: source.color }}>\n                        {Math.round(watts * 24 / 1000)}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Comparison Chart */}\n        {comparisonMode && selectedSources.length > 1 && (\n          <div className=\"bg-white p-6 rounded-lg shadow-lg mb-6\">\n            <h3 className=\"text-xl font-bold mb-4\">Current Performance Comparison</h3>\n            <ResponsiveContainer width=\"100%\" height={400}>\n              <BarChart data={selectedSources.map(source => ({\n                name: energySources[source].name,\n                efficiency: calculateEfficiency(source),\n                watts: calculateWatts(source) / 100, // Scale for chart\n                environmental: energySources[source].environmental\n              }))}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip \n                  formatter={(value, name) => [\n                    name === 'watts' ? `${Math.round(value * 100)} W` : `${value}%`,\n                    name === 'watts' ? 'Power Output' : name.charAt(0).toUpperCase() + name.slice(1)\n                  ]}\n                />\n                <Legend />\n                <Bar dataKey=\"efficiency\" fill=\"#3b82f6\" name=\"Efficiency %\" />\n                <Bar dataKey=\"watts\" fill=\"#10b981\" name=\"Power Output (x100 W)\" />\n                <Bar dataKey=\"environmental\" fill=\"#f59e0b\" name=\"Environmental Score %\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        )}\n\n        {/* Total Energy Production Summary */}\n        <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n          <h3 className=\"text-xl font-bold mb-4\">Energy Production Summary</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            {(comparisonMode ? selectedSources : [selectedEnergy]).map(source => {\n              const watts = calculateWatts(source);\n              const efficiency = calculateEfficiency(source);\n              const dailyKwh = Math.round(watts * 24 / 1000);\n              const sourceData = energySources[source];\n              \n              return (\n                <div key={source} className=\"text-center p-4 bg-gray-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold mb-1\" style={{ color: sourceData.color }}>\n                    {watts.toLocaleString()} W\n                  </div>\n                  <div className=\"text-lg font-semibold mb-1\" style={{ color: sourceData.color }}>\n                    {efficiency}% efficient\n                  </div>\n                  <div className=\"text-sm text-gray-600 mb-2\">{sourceData.name}</div>\n                  <div className=\"text-xs text-gray-500\">\n                    {dailyKwh} kWh/day\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EnergyComparisonDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}